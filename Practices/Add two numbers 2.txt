/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) 
    {
        Stack<int> l1Stack = new Stack<int>();
        Stack<int> l2Stack = new Stack<int>();
        
        while(l1 != null)
        {
            l1Stack.Push(l1.val);
            l1 = l1.next;
        }
        while(l2 != null)
        {
            l2Stack.Push(l2.val);
            l2 = l2.next;
        }
        
        int carry = 0;
        ListNode head = null;
        while(l1Stack.Count > 0 || l2Stack.Count > 0 || carry > 0)
        {
            var sum = ((l1Stack.Count == 0) ? 0 : l1Stack.Pop()) +
                ((l2Stack.Count == 0) ? 0 : l2Stack.Pop()) + carry;
            carry = sum / 10;
            var value = sum % 10;
            
            var node = new ListNode(value);
            node.next = head;
            head = node;
        }
        

        return head;
    }
}