/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode RotateRight(ListNode head, int k) 
    {
        if(head == null || head.next == null)
        {
            return head;
        }
        var dummy = new ListNode(-1);
        dummy.next = head;
        
        var tail = dummy;
        var current = dummy;
        int length = 0;
        //Find the length of linked list
        while(tail.next != null)
        {
            tail = tail.next;
            length++;
        }
        
        k = k % length;
        
        if(k == 0)
        {
            return head;
        }
        
        k = length - k;
        while(k > 0)
        {
            current = current.next;
            k--;
        }
        
        var nextPtr = current.next;
        current.next = null;
        tail.next = head;
        
        return nextPtr;
    }
}